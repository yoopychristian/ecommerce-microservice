// Code generated by mockery v1.0.0
package mocks

import (
	usecase "ecommerce-microservice/product/src/usecase"

	mock "github.com/stretchr/testify/mock"
)

// CategoryUseCase is an autogenerated mock type for the CategoryUseCase type
type CategoryUseCase struct {
	mock.Mock
}

// FindAll provides a mock function with given fields:
func (_m *CategoryUseCase) FindAll() <-chan usecase.UseCaseResult {
	ret := _m.Called()

	var r0 <-chan usecase.UseCaseResult
	if rf, ok := ret.Get(0).(func() <-chan usecase.UseCaseResult); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan usecase.UseCaseResult)
		}
	}

	return r0
}

// FindByID provides a mock function with given fields: id
func (_m *CategoryUseCase) FindByID(id int) <-chan usecase.UseCaseResult {
	ret := _m.Called(id)

	var r0 <-chan usecase.UseCaseResult
	if rf, ok := ret.Get(0).(func(int) <-chan usecase.UseCaseResult); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan usecase.UseCaseResult)
		}
	}

	return r0
}
